array A-data-stat[144] : w32 -> w8 = symbolic
array arg00[6] : w32 -> w8 = symbolic
array arg01[9] : w32 -> w8 = symbolic
array arg02[2] : w32 -> w8 = symbolic
array arg03[7] : w32 -> w8 = symbolic
array arg04[11] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array model_version[4] : w32 -> w8 = symbolic
array stdin-stat[144] : w32 -> w8 = symbolic
(query [(Sle 32
              (SExt w32 N0:(Read w8 1 arg00)))
         (Sle 32
              (SExt w32 (Read w8 3 arg00)))
         (Sle 32
              (SExt w32 (Read w8 4 arg00)))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 0 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 1 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 2 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 5 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 6 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 7 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 0 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 1 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 2 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 5 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 0 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 1 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 2 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 5 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 6 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 7 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 8 arg04))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 9 arg04))))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A-data-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 A-data-stat)
                      18446744073709486080))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 stdin-stat)
                      18446744073709486080))
         (Eq 1
             (ReadLSB w32 0 model_version))
         (Eq 45 (Read w8 0 arg02))
         (Eq 10 (Read w8 2 arg00))
         (Eq 36 (Read w8 0 arg00))
         (Eq false (Eq 92 N0))
         (Eq false
             (Eq 0
                 (And w32 (ZExt w32 (ReadLSB w16 N1:(Extract w32 0 (Add w64 256
                                                                            (Mul w64 2
                                                                                     (SExt w64 (ZExt w32 N0))))) const_arr1))
                          8)))]
        false)
