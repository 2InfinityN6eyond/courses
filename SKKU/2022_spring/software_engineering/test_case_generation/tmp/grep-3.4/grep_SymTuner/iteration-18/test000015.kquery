array A-data-stat[144] : w32 -> w8 = symbolic
array arg00[8] : w32 -> w8 = symbolic
array arg01[5] : w32 -> w8 = symbolic
array const_arr1[1284] : w32 -> w
array const_arr4[32] : w32 -> w8 = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
array model_version[4] : w32 -> w8 = symbolic
array stdin-stat[144] : w32 -> w8 = symbolic
array stdout-stat[144] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg00))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg00))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 5 arg00))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 6 arg00))))
         (Eq false
             (Sle 32
                  (SExt w32 N0:(Read w8 0 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg01))))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A-data-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 A-data-stat)
                      18446744073709486080))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 stdin-stat)
                      18446744073709486080))
         (Eq 0
             (And w64 (ReadLSB w64 56 stdout-stat)
                      18446744073709486080))
         (Eq 1
             (ReadLSB w32 0 model_version))
         (Eq 45 (Read w8 0 arg00))
         (Eq 45 (Read w8 1 arg00))
         (Eq 0 (Read w8 2 arg00))
         (Eq false (Eq 0 N0))
         (Eq 0 (Read w8 2 arg01))
         (Eq false (Eq 10 N0))
         (Eq 10 (Read w8 1 arg01))
         (Eq 8192
             (And w32 (ReadLSB w32 24 stdout-stat)
                      61440))
         (Eq 5
             (ReadLSB w64 8 stdout-stat))
         (Eq 65
             (ReadLSB w64 0 stdout-stat))
         (Eq 254
             (Read w8 (Extract w32 0 (Add w64 3 (ZExt w64 N0)))
                      const_arr1))
         (Eq 0
             (And w64 (LShr w64 (Xor w64 18446744073709551615
                                         (ReadLSB w64 24 U0:[N1:(Add w32 7
                                                                         N2:(Extract w32 0 (Mul w64 8
                                                                                                    (ZExt w64 (UDiv w32 N3:(Extract w32 0 (SExt w64 (ZExt w32 N0)))
                                                                                                                        64)))))=(Extract w8 56 N4:(Or w64 (ReadLSB w64 N2 const_arr4)
                                                                                                                                                          (Shl w64 1
                                                                                                                                                                   (ZExt w64 (URem w32 N3 64))))),
                                                             N5:(Add w32 6 N2)=(Extract w8 48 N4),
                                                             N6:(Add w32 5 N2)=(Extract w8 40 N4),
                                                             N7:(Add w32 4 N2)=(Extract w8 32 N4),
                                                             N8:(Add w32 3 N2)=(Extract w8 24 N4),
                                                             N9:(Add w32 2 N2)=(Extract w8 16 N4),
                                                             N10:(Add w32 1 N2)=(Extract w8 8 N4),
                                                             N2=(Extract w8 0 N4)] @ const_arr4))
                                0)
                      1))]
        false)
