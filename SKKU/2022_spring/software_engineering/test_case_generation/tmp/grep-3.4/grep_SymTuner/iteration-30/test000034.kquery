array A-data-stat[144] : w32 -> w8 = symbolic
array arg00[7] : w32 -> w8 = symbolic
array arg01[5] : w32 -> w8 = symbolic
array arg02[2] : w32 -> w8 = symbolic
array arg03[8] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array const_arr3[32] : w32 -> w8 = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
array model_version[4] : w32 -> w8 = symbolic
array stdin-stat[144] : w32 -> w8 = symbolic
array stdout-stat[144] : w32 -> w8 = symbolic
(query [(Sle 32
              (SExt w32 N0:(Read w8 1 arg00)))
         (Sle 32
              (SExt w32 N1:(Read w8 3 arg00)))
         (Sle 32
              (SExt w32 N2:(Read w8 4 arg00)))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 1 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 2 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 0 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 1 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 2 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 5 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 6 arg03))))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A-data-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 A-data-stat)
                      18446744073709486080))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 stdin-stat)
                      18446744073709486080))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 stdout-stat)
                      18446744073709486080))
         (Eq 1
             (ReadLSB w32 0 model_version))
         (Eq 45 (Read w8 0 arg02))
         (Eq 10 (Read w8 2 arg00))
         (Eq 10 (Read w8 5 arg00))
         (Eq false
             (Eq 32768
                 N3:(And w32 (ReadLSB w32 24 stdout-stat)
                             61440)))
         (Eq false (Eq 8192 N3))
         (Eq 42 (Read w8 0 arg00))
         (Eq false (Eq 92 N0))
         (Eq 0
             (And w32 (ZExt w32 (ReadLSB w16 N4:(Extract w32 0 (Add w64 256
                                                                        (Mul w64 2
                                                                                 N5:(SExt w64 (ZExt w32 N0))))) const_arr1))
                      8))
         (Eq false (Eq 124 N0))
         (Eq false (Eq 42 N0))
         (Eq false (Eq 43 N0))
         (Eq false (Eq 63 N0))
         (Eq false (Eq 123 N0))
         (Eq false (Eq 125 N0))
         (Eq false (Eq 40 N0))
         (Eq false (Eq 41 N0))
         (Eq false (Eq 91 N0))
         (Eq false (Eq 46 N0))
         (Eq false (Eq 94 N0))
         (Eq false (Eq 36 N0))
         (Eq false (Eq 92 N1))
         (Eq 0
             (And w32 (ZExt w32 (ReadLSB w16 N6:(Extract w32 0 (Add w64 256
                                                                        (Mul w64 2
                                                                                 N7:(SExt w64 (ZExt w32 N1))))) const_arr1))
                      8))
         (Eq false (Eq 124 N1))
         (Eq false (Eq 42 N1))
         (Eq false (Eq 43 N1))
         (Eq false (Eq 63 N1))
         (Eq false (Eq 123 N1))
         (Eq false (Eq 125 N1))
         (Eq false (Eq 40 N1))
         (Eq false (Eq 41 N1))
         (Eq false (Eq 91 N1))
         (Eq false (Eq 46 N1))
         (Eq false (Eq 94 N1))
         (Eq false (Eq 36 N1))
         (Eq false (Eq 92 N2))
         (Eq 0
             (And w32 (ZExt w32 (ReadLSB w16 N8:(Extract w32 0 (Add w64 256
                                                                        (Mul w64 2
                                                                                 N9:(SExt w64 (ZExt w32 N2))))) const_arr1))
                      8))
         (Eq false (Eq 124 N2))
         (Eq false (Eq 42 N2))
         (Eq false (Eq 43 N2))
         (Eq false (Eq 63 N2))
         (Eq false (Eq 123 N2))
         (Eq false (Eq 125 N2))
         (Eq false (Eq 40 N2))
         (Eq false (Eq 41 N2))
         (Eq false (Eq 91 N2))
         (Eq false (Eq 46 N2))
         (Eq false (Eq 94 N2))
         (Eq false (Eq 36 N2))
         (Eq false (Eq 96 N0))
         (Eq false (Eq 39 N0))
         (Eq false (Eq 60 N0))
         (Eq false (Eq 62 N0))
         (Eq false (Eq 96 N1))
         (Eq false (Eq 39 N1))
         (Eq false (Eq 60 N1))
         (Eq false (Eq 62 N1))
         (Eq false (Eq 96 N2))
         (Eq false (Eq 39 N2))
         (Eq false (Eq 60 N2))
         (Eq false (Eq 62 N2))
         (Eq N10:(SExt w32 (Extract w8 0 N9))
             (SExt w32 (Extract w8 0 N7)))
         (Eq (SExt w32 (Extract w8 0 N5))
             N10)
         (Eq 0
             (And w64 (LShr w64 (And w64 (Xor w64 18446744073709551615
                                                  (ReadLSB w64 0 U0:[N11:(Add w32 7
                                                                                  N12:(Extract w32 0 (Mul w64 8
                                                                                                              (ZExt w64 (UDiv w32 N13:(Extract w32 0 N7) 64)))))=(Extract w8 56 N14:(Or w64 (ReadLSB w64 N12 const_arr3)
                                                                                                                                                                                            (Shl w64 1
                                                                                                                                                                                                     (ZExt w64 (URem w32 N13 64))))),
                                                                     N15:(Add w32 6 N12)=(Extract w8 48 N14),
                                                                     N16:(Add w32 5 N12)=(Extract w8 40 N14),
                                                                     N17:(Add w32 4 N12)=(Extract w8 32 N14),
                                                                     N18:(Add w32 3 N12)=(Extract w8 24 N14),
                                                                     N19:(Add w32 2 N12)=(Extract w8 16 N14),
                                                                     N20:(Add w32 1 N12)=(Extract w8 8 N14),
                                                                     N12=(Extract w8 0 N14)] @ const_arr3))
                                         18446739675663040511)
                                32)
                      1))
         (Eq 0 (Read w8 0 arg01))
         (Eq false
             (Eq 32768
                 (And w32 (ReadLSB w32 24 stdin-stat)
                          61440)))]
        false)
