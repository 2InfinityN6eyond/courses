array A-data-stat[144] : w32 -> w8 = symbolic
array arg00[6] : w32 -> w8 = symbolic
array arg01[10] : w32 -> w8 = symbolic
array arg02[6] : w32 -> w8 = symbolic
array arg03[6] : w32 -> w8 = symbolic
array arg04[2] : w32 -> w8 = symbolic
array const_arr1[1284] : w32 -> w
array const_arr4[32] : w32 -> w8 = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
array model_version[4] : w32 -> w8 = symbolic
array stdin-stat[144] : w32 -> w8 = symbolic
array stdout-stat[144] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 32
                  (SExt w32 N0:(Read w8 1 arg00))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 5 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 6 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 7 arg01))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 8 arg01))))
         (Sle 32
              (SExt w32 N1:(Read w8 0 arg02)))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 1 arg02))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 2 arg02))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg02))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg02))))
         (Sle 32
              (SExt w32 N2:(Read w8 0 arg03)))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 1 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 2 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 3 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 4 arg03))))
         (Eq false
             (Sle 32
                  (SExt w32 (Read w8 0 arg04))))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A-data-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 A-data-stat)
                      18446744073709486080))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 stdin-stat)
                      18446744073709486080))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout-stat)
                          2147483647)))
         (Eq 0
             (And w64 (ReadLSB w64 56 stdout-stat)
                      18446744073709486080))
         (Eq 1
             (ReadLSB w32 0 model_version))
         (Eq false (Eq 45 N1))
         (Eq false (Eq 45 N2))
         (Eq false (Eq 0 N0))
         (Eq 10 (Read w8 0 arg00))
         (Eq false (Eq 10 N0))
         (Eq 10 (Read w8 2 arg00))
         (Eq 10 (Read w8 3 arg00))
         (Eq 10 (Read w8 4 arg00))
         (Eq false
             (Eq 32768
                 N3:(And w32 (ReadLSB w32 24 stdout-stat)
                             61440)))
         (Eq false (Eq 8192 N3))
         (Eq false (Eq 123 N0))
         (Eq false (Eq 124 N0))
         (Eq false (Eq 91 N0))
         (Eq false (Eq 92 N0))
         (Eq false (Eq 94 N0))
         (Eq false (Eq 36 N0))
         (Eq false (Eq 40 N0))
         (Eq false (Eq 42 N0))
         (Eq false (Eq 43 N0))
         (Eq false (Eq 46 N0))
         (Eq false (Eq 63 N0))
         (Eq 254
             (Read w8 (Extract w32 0 (Add w64 3 (ZExt w64 N0)))
                      const_arr1))
         (Eq false (Eq 125 N0))
         (Eq false (Eq 41 N0))
         (Eq false (Eq 96 N0))
         (Eq false (Eq 98 N0))
         (Eq false (Eq 115 N0))
         (Eq false (Eq 119 N0))
         (Eq false (Eq 66 N0))
         (Eq false (Eq 83 N0))
         (Eq false (Eq 87 N0))
         (Eq false (Eq 39 N0))
         (Eq false (Eq 49 N0))
         (Eq false (Eq 50 N0))
         (Eq false (Eq 51 N0))
         (Eq false (Eq 52 N0))
         (Eq false (Eq 53 N0))
         (Eq false (Eq 54 N0))
         (Eq false (Eq 55 N0))
         (Eq false (Eq 56 N0))
         (Eq false (Eq 57 N0))
         (Eq false (Eq 60 N0))
         (Eq false (Eq 62 N0))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4:(Xor w64 18446744073709551615
                                                (ReadLSB w64 24 U0:[N5:(Add w32 7
                                                                                N6:(Extract w32 0 (Mul w64 8
                                                                                                           (ZExt w64 (UDiv w32 N7:(Extract w32 0 (SExt w64 (ZExt w32 N0)))
                                                                                                                               64)))))=(Extract w8 56 N8:(Or w64 (ReadLSB w64 N6 const_arr4)
                                                                                                                                                                 (Shl w64 1
                                                                                                                                                                          (ZExt w64 (URem w32 N7 64))))),
                                                                    N9:(Add w32 6 N6)=(Extract w8 48 N8),
                                                                    N10:(Add w32 5 N6)=(Extract w8 40 N8),
                                                                    N11:(Add w32 4 N6)=(Extract w8 32 N8),
                                                                    N12:(Add w32 3 N6)=(Extract w8 24 N8),
                                                                    N13:(Add w32 2 N6)=(Extract w8 16 N8),
                                                                    N14:(Add w32 1 N6)=(Extract w8 8 N8),
                                                                    N6=(Extract w8 0 N8)] @ const_arr4))
                                    0)
                          1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 1) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 2) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 3) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 4) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 5) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 6) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 7) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 8) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 9) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 10) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 11) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 12) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 13) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 14) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 15) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 16) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 17) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 18) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 19) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 20) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 21) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 22) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 23) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 24) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 25) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 26) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 27) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 28) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 29) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 30) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 31) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 32) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 33) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 34) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 35) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 36) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 37) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 38) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 39) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 40) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 41) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 42) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 43) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 44) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 45) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 46) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 47) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 48) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 49) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 50) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 51) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 52) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 53) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 54) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 55) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 56) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 57) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 58) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 59) 1)))
         (Eq false
             (Eq 0
                 (And w64 (LShr w64 N4 60) 1)))
         (Eq 47 (Read w8 0 arg01))
         (Eq 1 (Read w8 1 arg01))
         (Eq 1 (Read w8 2 arg01))
         (Eq 0 (Read w8 3 arg01))]
        false)
